

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class Device : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Device entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Device()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Device(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Device> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Device.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Device_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Device_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IMEI
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.IMEI);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.IMEI, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMEI_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMEI_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMEI_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SIM
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.SIM);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.SIM, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SIM_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SIM_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SIM_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Serial
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Serial);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Serial, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Serial_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Serial_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Serial_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PhoneNumber
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.PhoneNumber);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.PhoneNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhoneNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhoneNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhoneNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo CreatedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.CreatedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo ModifiedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.ModifiedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.MakeModel MakeModel
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.MakeModel);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.MakeModel, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MakeModel_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MakeModel_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MakeModel_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.HwSwOrder HwSwOrder
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.HwSwOrder);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.HwSwOrder, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HwSwOrder_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HwSwOrder_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HwSwOrder_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Customer Owner
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Owner);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Owner, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owner_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owner_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owner_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.DeviceStatus DeviceStatus
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.DeviceStatus);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.DeviceStatus, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DeviceStatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DeviceStatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DeviceStatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.StockLocation StockLocation
        {
            get
            {
                return global::LightSwitchApplication.Device.DetailsClass.GetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.StockLocation);
            }
            set
            {
                global::LightSwitchApplication.Device.DetailsClass.SetValue(this, global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.StockLocation, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockLocation_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockLocation_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockLocation_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Device,
                global::LightSwitchApplication.Device.DetailsClass,
                global::LightSwitchApplication.Device.DetailsClass.IImplementation,
                global::LightSwitchApplication.Device.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>.Entry
                __DeviceEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>.Entry(
                    global::LightSwitchApplication.Device.DetailsClass.__Device_CreateNew,
                    global::LightSwitchApplication.Device.DetailsClass.__Device_Created,
                    global::LightSwitchApplication.Device.DetailsClass.__Device_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Device __Device_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Device> es)
            {
                return new global::LightSwitchApplication.Device(es);
            }
            private static void __Device_Created(global::LightSwitchApplication.Device e)
            {
                e.Device_Created();
            }
            private static bool __Device_AllowSaveWithErrors(global::LightSwitchApplication.Device e)
            {
                bool result = false;
                e.Device_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Device.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string> IMEI
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.IMEI) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string> SIM
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.SIM) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string> Serial
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Serial) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string> PhoneNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.PhoneNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.MakeModel> MakeModel
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.MakeModel) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.MakeModel>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.HwSwOrder> HwSwOrder
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.HwSwOrder) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.HwSwOrder>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Customer> Owner
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Owner) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Customer>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.DeviceStatus> DeviceStatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.DeviceStatus) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.DeviceStatus>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.StockLocation> StockLocation
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.StockLocation) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.StockLocation>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string Name { get; set; }
                new string IMEI { get; set; }
                new string SIM { get; set; }
                new string Serial { get; set; }
                new string PhoneNumber { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation MakeModel { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation HwSwOrder { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Owner { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation DeviceStatus { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation StockLocation { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry
                    IMEI = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry(
                        "IMEI",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._IMEI_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._IMEI_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._IMEI_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._IMEI_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._IMEI_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._IMEI_OnValueChanged);
                private static void _IMEI_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._IMEI, sf);
                }
                private static bool _IMEI_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.IMEI_IsReadOnly(ref result);
                    return result;
                }
                private static void _IMEI_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IMEI_Validate(r);
                }
                private static string _IMEI_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.IMEI;
                }
                private static void _IMEI_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, string v)
                {
                    d.ImplementationEntity.IMEI = v;
                }
                private static void _IMEI_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.IMEI_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry
                    SIM = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry(
                        "SIM",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._SIM_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._SIM_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._SIM_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._SIM_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._SIM_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._SIM_OnValueChanged);
                private static void _SIM_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._SIM, sf);
                }
                private static bool _SIM_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.SIM_IsReadOnly(ref result);
                    return result;
                }
                private static void _SIM_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SIM_Validate(r);
                }
                private static string _SIM_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.SIM;
                }
                private static void _SIM_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SIM = v;
                }
                private static void _SIM_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.SIM_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry
                    Serial = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry(
                        "Serial",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Serial_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Serial_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Serial_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Serial_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Serial_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Serial_OnValueChanged);
                private static void _Serial_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._Serial, sf);
                }
                private static bool _Serial_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.Serial_IsReadOnly(ref result);
                    return result;
                }
                private static void _Serial_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Serial_Validate(r);
                }
                private static string _Serial_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.Serial;
                }
                private static void _Serial_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Serial = v;
                }
                private static void _Serial_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.Serial_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry
                    PhoneNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry(
                        "PhoneNumber",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._PhoneNumber_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._PhoneNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._PhoneNumber_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._PhoneNumber_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._PhoneNumber_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._PhoneNumber_OnValueChanged);
                private static void _PhoneNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._PhoneNumber, sf);
                }
                private static bool _PhoneNumber_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.PhoneNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _PhoneNumber_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PhoneNumber_Validate(r);
                }
                private static string _PhoneNumber_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.PhoneNumber;
                }
                private static void _PhoneNumber_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PhoneNumber = v;
                }
                private static void _PhoneNumber_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.PhoneNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.MakeModel>.Entry
                    MakeModel = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.MakeModel>.Entry(
                        "MakeModel",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._MakeModel_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._MakeModel_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._MakeModel_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._MakeModel_GetCoreImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._MakeModel_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._MakeModel_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._MakeModel_Refresh,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._MakeModel_OnValueChanged);
                private static void _MakeModel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.MakeModel>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._MakeModel, sf);
                }
                private static bool _MakeModel_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.MakeModel_IsReadOnly(ref result);
                    return result;
                }
                private static void _MakeModel_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MakeModel_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _MakeModel_GetCoreImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.MakeModel;
                }
                private static global::LightSwitchApplication.MakeModel _MakeModel_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.MakeModel, global::LightSwitchApplication.MakeModel.DetailsClass>(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.MakeModel, ref d._MakeModel);
                }
                private static void _MakeModel_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, global::LightSwitchApplication.MakeModel v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.MakeModel, ref d._MakeModel, (i, ev) => i.MakeModel = ev, v);
                }
                private static void _MakeModel_Refresh(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.MakeModel, ref d._MakeModel);
                }
                private static void _MakeModel_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.MakeModel_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.HwSwOrder>.Entry
                    HwSwOrder = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.HwSwOrder>.Entry(
                        "HwSwOrder",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._HwSwOrder_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._HwSwOrder_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._HwSwOrder_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._HwSwOrder_GetCoreImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._HwSwOrder_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._HwSwOrder_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._HwSwOrder_Refresh,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._HwSwOrder_OnValueChanged);
                private static void _HwSwOrder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.HwSwOrder>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._HwSwOrder, sf);
                }
                private static bool _HwSwOrder_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.HwSwOrder_IsReadOnly(ref result);
                    return result;
                }
                private static void _HwSwOrder_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.HwSwOrder_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _HwSwOrder_GetCoreImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.HwSwOrder;
                }
                private static global::LightSwitchApplication.HwSwOrder _HwSwOrder_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.HwSwOrder, global::LightSwitchApplication.HwSwOrder.DetailsClass>(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.HwSwOrder, ref d._HwSwOrder);
                }
                private static void _HwSwOrder_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, global::LightSwitchApplication.HwSwOrder v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.HwSwOrder, ref d._HwSwOrder, (i, ev) => i.HwSwOrder = ev, v);
                }
                private static void _HwSwOrder_Refresh(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.HwSwOrder, ref d._HwSwOrder);
                }
                private static void _HwSwOrder_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.HwSwOrder_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Customer>.Entry
                    Owner = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Customer>.Entry(
                        "Owner",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Owner_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Owner_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Owner_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Owner_GetCoreImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Owner_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Owner_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Owner_Refresh,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._Owner_OnValueChanged);
                private static void _Owner_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Customer>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._Owner, sf);
                }
                private static bool _Owner_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.Owner_IsReadOnly(ref result);
                    return result;
                }
                private static void _Owner_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Owner_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Owner_GetCoreImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.Owner;
                }
                private static global::LightSwitchApplication.Customer _Owner_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Owner, ref d._Owner);
                }
                private static void _Owner_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, global::LightSwitchApplication.Customer v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Owner, ref d._Owner, (i, ev) => i.Owner = ev, v);
                }
                private static void _Owner_Refresh(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.Owner, ref d._Owner);
                }
                private static void _Owner_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.Owner_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.DeviceStatus>.Entry
                    DeviceStatus = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.DeviceStatus>.Entry(
                        "DeviceStatus",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._DeviceStatus_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._DeviceStatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._DeviceStatus_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._DeviceStatus_GetCoreImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._DeviceStatus_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._DeviceStatus_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._DeviceStatus_Refresh,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._DeviceStatus_OnValueChanged);
                private static void _DeviceStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.DeviceStatus>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._DeviceStatus, sf);
                }
                private static bool _DeviceStatus_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.DeviceStatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _DeviceStatus_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DeviceStatus_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _DeviceStatus_GetCoreImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.DeviceStatus;
                }
                private static global::LightSwitchApplication.DeviceStatus _DeviceStatus_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.DeviceStatus, global::LightSwitchApplication.DeviceStatus.DetailsClass>(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.DeviceStatus, ref d._DeviceStatus);
                }
                private static void _DeviceStatus_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, global::LightSwitchApplication.DeviceStatus v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.DeviceStatus, ref d._DeviceStatus, (i, ev) => i.DeviceStatus = ev, v);
                }
                private static void _DeviceStatus_Refresh(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.DeviceStatus, ref d._DeviceStatus);
                }
                private static void _DeviceStatus_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.DeviceStatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.StockLocation>.Entry
                    StockLocation = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.StockLocation>.Entry(
                        "StockLocation",
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._StockLocation_Stub,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._StockLocation_ComputeIsReadOnly,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._StockLocation_Validate,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._StockLocation_GetCoreImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._StockLocation_GetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._StockLocation_SetImplementationValue,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._StockLocation_Refresh,
                        global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties._StockLocation_OnValueChanged);
                private static void _StockLocation_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Device.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.StockLocation>.Data> c, global::LightSwitchApplication.Device.DetailsClass d, object sf)
                {
                    c(d, ref d._StockLocation, sf);
                }
                private static bool _StockLocation_ComputeIsReadOnly(global::LightSwitchApplication.Device e)
                {
                    bool result = false;
                    e.StockLocation_IsReadOnly(ref result);
                    return result;
                }
                private static void _StockLocation_Validate(global::LightSwitchApplication.Device e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StockLocation_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _StockLocation_GetCoreImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.ImplementationEntity.StockLocation;
                }
                private static global::LightSwitchApplication.StockLocation _StockLocation_GetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.StockLocation, global::LightSwitchApplication.StockLocation.DetailsClass>(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.StockLocation, ref d._StockLocation);
                }
                private static void _StockLocation_SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass d, global::LightSwitchApplication.StockLocation v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.StockLocation, ref d._StockLocation, (i, ev) => i.StockLocation = ev, v);
                }
                private static void _StockLocation_Refresh(global::LightSwitchApplication.Device.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Device.DetailsClass.PropertySetProperties.StockLocation, ref d._StockLocation);
                }
                private static void _StockLocation_OnValueChanged(global::LightSwitchApplication.Device e)
                {
                    e.StockLocation_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data _IMEI;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data _SIM;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data _Serial;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data _PhoneNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.MakeModel>.Data _MakeModel;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.HwSwOrder>.Data _HwSwOrder;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.Customer>.Data _Owner;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.DeviceStatus>.Data _DeviceStatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Device, global::LightSwitchApplication.Device.DetailsClass, global::LightSwitchApplication.StockLocation>.Data _StockLocation;
            
        }
    
        #endregion
    }
    
    #endregion
}
